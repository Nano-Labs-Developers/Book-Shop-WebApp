page "/admin/product-types"
@inject IBookTypeService BookTypeService
@implements IDisposable
@attribute [Authorize(Roles = "Admin")]

@foreach (var bookType in BookTypeService.BookTypes)
{
    @if (bookType.Editing)
    {
        <EditForm Model="editingBookType" OnSubmit="UpdateBookType">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="editingBookType.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col">
                @bookType.Name
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="@(() => EditBookType(bookType))">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary" @onclick="CreateNewBookType">
    <i class="oi oi-plus"></i> Add new product type
</button>

@code {
    BookType? editingBookType = null;

    protected override async Task OnInitializedAsync()
    {
        await BookTypeService.GetBookTypes();
        BookTypeService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        BookTypeService.OnChange -= StateHasChanged;
    }

    private void EditBookType(BookType bookType)
    {
        bookType.Editing = true;
        editingBookType = bookType;
    }

    private void CreateNewBookType()
    {
        editingBookType = BookTypeService.CreateNewBookType();
    }

    private async Task UpdateBookType()
    {
        if (editingBookType != null)
        {
            if (editingBookType.IsNew)
            {
                await BookTypeService.AddBookType(editingBookType);
            }
            else
            {
                await BookTypeService.UpdateBookType(editingBookType);
            }

            editingBookType = new BookType();
        }
    }
}
